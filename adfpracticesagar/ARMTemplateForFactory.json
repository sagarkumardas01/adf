{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfpracticesagar"
		},
		"ln_sqldb_practicesqldb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ln_sqldb_practicesqldb'"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://akvaccesspolicysagar.vault.azure.net/"
		},
		"ln_adls_landingstoragesagar_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://landingstoragesagar.dfs.core.windows.net/"
		},
		"ln_sqldb_practicesqldb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "adfsqserver.database.windows.net"
		},
		"ln_sqldb_practicesqldb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "practicesqldb"
		},
		"ln_sqldb_practicesqldb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sagardas"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_update_employee_age')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_employee",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from dbo.emplyee where name = ''',pipeline().parameters.p_name,''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqldb_sql",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "calculate_age",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get_employee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_age",
							"value": {
								"value": "@string(\n        sub(\n            int(formatDateTime(utcNow(),'YYYY')),\n            int(formatDateTime(activity('get_employee').output.firstRow.dob,'YYYY'))\n        )\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update_employee_age",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "calculate_age",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('update dbo.employee set age = ',variables('v_age'),\n        'where name = ',''',pipeline().parameters.p_name(),'''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqldb_sql",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_name": {
						"type": "string"
					}
				},
				"variables": {
					"v_age": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqldb_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ln_sqldb_practicesqldb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ln_sqldb_practicesqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ln_adls_landingstoragesagar')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ln_adls_landingstoragesagar_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ln_sqldb_practicesqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ln_sqldb_practicesqldb_properties_typeProperties_server')]",
					"database": "[parameters('ln_sqldb_practicesqldb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ln_sqldb_practicesqldb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ln_sqldb_practicesqldb_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}